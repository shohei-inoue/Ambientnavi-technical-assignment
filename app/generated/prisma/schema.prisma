// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider      = "prisma-client-js"
  output        = "../app/generated/prisma"
  binaryTargets = ["native", "linux-musl-arm64-openssl-3.0.x"]
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

// カテゴリー
model Category {
  id        Int            @id @default(autoincrement())
  name      String         @unique
  createdAt DateTime       @default(now())
  updatedAt DateTime       @updatedAt
  menus     MenuCategory[]
}

// タグ
model Tag {
  id        Int       @id @default(autoincrement())
  name      String    @unique
  color     String?
  createdAt DateTime  @default(now())
  updatedAt DateTime  @updatedAt
  menus     MenuTag[]
}

// メニュー
model Menu {
  id          Int            @id @default(autoincrement())
  name        String         @unique
  description String?
  price       Int
  imageUrl    String?
  isAvailable Boolean        @default(true)
  taxIncluded Boolean        @default(true)
  createdAt   DateTime       @default(now())
  updatedAt   DateTime       @updatedAt
  categories  MenuCategory[]
  tags        MenuTag[]
}

// メニュー - カテゴリー
model MenuCategory {
  menuId     Int
  categoryId Int
  menu       Menu     @relation(fields: [menuId], references: [id])
  category   Category @relation(fields: [categoryId], references: [id])

  @@id([menuId, categoryId])
}

// メニュー - タグ
model MenuTag {
  menuId Int
  tagId  Int
  menu   Menu @relation(fields: [menuId], references: [id])
  tag    Tag  @relation(fields: [tagId], references: [id])

  @@id([menuId, tagId])
}
